syntax = "proto3";

package application;

service ApplicationService {
  rpc add (AddRequest) returns (AddResponse) {}
  rpc get (GetRequest) returns (GetResponse) {}
  rpc list (ListRequest) returns (ListResponse) {}
  rpc remove (RemoveRequest) returns (RemoveResponse) {}
  rpc update (updateRequest) returns (updateResponse) {}
}
//enum 
enum stateEnum{
      PENDING = 0;
      ACCEPTED = 1;
      REJECTED= 2;
   }
// Create application

message AddRequest {
  string offerId = 2;
  string userId = 3;
}

message AddResponse {
  int32 status = 1;
  repeated string error = 2;
  int32 id = 3;
}

// Get by application id 

message GetData {
  int32 id = 1;
  int32 offerId = 2;
  int32 userId = 3;
  stateEnum state = 4;
}

message GetRequest {
  int32 id = 1;
  int32 userId = 2;

}

message GetResponse {
  int32 status = 1;
  repeated string error = 2;
  GetData data = 3;
}


// LIST

message ListData {
  int32 id = 1;
  int32 offerId = 2;
  int32 userId = 3;
  stateEnum state = 4;
}
message Criteria {
  int32 id = 1;
  int32 offerId = 2;
  stateEnum state = 3;
}
message ListRequest {
  Critria criteria= 1;
  int32 userId = 2;
}

message ListResponse {
  int32 status = 1;
  repeated string error = 2;
  repeated ListData data = 3;
}

//Remove

message RemoveRequest {
  int32 id = 1;
}

message RemoveResponse {
  int32 status = 1;
  repeated string error = 2;
  int32 id = 3;
}

// update 

message updateData {
  int32 id = 1;
  int32 offerId = 2;
  int32 userId = 3;
  stateEnum state = 4;
}

message updateRequest {
  int32 id = 1;
  int32 offerId = 2;
  string userId = 3;
  stateEnum state = 4;
}

message updateResponse {
  int32 status = 1;
  repeated string error = 2;
  updateData data = 3;
}
