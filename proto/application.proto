syntax = "proto3";

package application;

service ApplicationService {
  rpc addApp (AddRequestApp) returns (AddResponseApp) {}
  rpc getApp (GetRequestApp) returns (GetResponseApp) {}
  rpc searchAppByCriteria (searchRequestApp) returns (searchResponseApp) {}
  rpc removeApp (RemoveRequestApp) returns (RemoveResponseApp) {}
  rpc updateApp (updateRequestApp) returns (updateResponseApp) {}
  rpc softDeleteApp (SoftDltRequestApp) returns (SoftDltResponseApp) {}
  rpc restoreApp (RestoreRequestApp) returns (RestoreResponseApp) {}
}
//enum 
enum stateEnum{
      PENDING = 0;
      ACCEPTED = 1;
      REJECTED= 2;
   }
// Create application

message AddRequestApp {
  int32 idOffer = 1;
  int32 idUser = 2;
}

message AddResponseApp {
  int32 status = 1;
  repeated string error = 2;
  int32 idApp = 3;
}

// Get by application id 

message GetDataApp {
  int32 idApp = 1;
  int32 idOffer = 2;
  int32 idUser = 3;
  stateEnum state = 4;
}

message GetRequestApp {
  int32 idApp = 1;
  int32 idUser = 2;

}

message GetResponseApp {
  int32 status = 1;
  repeated string error = 2;
  GetDataApp data = 3;
}


// search

message searchDataApp {
  int32 idApp = 1;
  int32 idOffer = 2;
  int32 idUser = 3;
  stateEnum state = 4;
}

message searchRequestApp {
  optional int32 idApp = 1;
  optional int32 idOffer = 2;
  optional stateEnum state = 3;
  int32 idUser = 4;
}

message searchResponseApp {
  int32 status = 1;
  repeated string error = 2;
  repeated searchDataApp data = 3;
}

//Remove

message RemoveRequestApp {
  int32 idUser = 1;
}

message RemoveResponseApp {
  int32 status = 1;
  repeated string error = 2;
  int32 idApp = 3;
}

// update 

message updateDataApp {
  int32 idApp = 1;
  int32 idOffer = 2;
  int32 idUser = 3;
  stateEnum state = 4;
}

message updateRequestApp {
  int32 idApp = 1;
  optional int32 idOffer = 2;
  int32 idUser = 3;
  optional stateEnum state = 4;
}

message updateResponseApp {
  int32 status = 1;
  repeated string error = 2;
  updateDataApp data = 3;
}


//soft delete
message SoftDltRequestApp {
  int32 idApp = 1;
}

message SoftDltResponseApp {
  int32 status = 1;
  repeated string error = 2;
  int32 idApp = 3;
}

//restore

message RestoreDataApp {
  int32 idApp = 1;
  int32 idOffer = 2;
  int32 idUser = 3;
  stateEnum state = 4;
 
}

message RestoreRequestApp {
  int32 ipApp = 1;
}

message RestoreResponseApp {
  int32 status = 1;
  repeated string error = 2;
  RestoreDataApp data = 3;
}





